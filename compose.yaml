version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: bookstore
      MYSQL_USER: bookstore_user
      MYSQL_PASSWORD: bookstore_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

#  springboot-bookstore-api:
#    image: openjdk:24-jdk
#    container_name: springboot-bookstore-api
#    depends_on:
#      - mysql
#      - elasticsearch
#      - kafka
#    volumes:
#      - ./target/classes:/app/classes
#      - ./target/resources:/app/resources
#      - ./target/dependency:/app/dependency
#    working_dir: /app
#    command: [
#      "java", "-cp",
#      "classes:resources:dependency/*",
#      "io.github.peterberghuis.springmysqleskafka.SpringMysqlEsKafkaApplication"
#    ]
#    ports:
#      - "8080:8080"
#    networks:
#      - bookstore-app-network
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/bookstore
#      SPRING_DATASOURCE_USERNAME: bookstore_user
#      SPRING_DATASOURCE_PASSWORD: bookstore_pass
#      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    restart: unless-stopped

volumes:
  mysql-data:
  es-data: